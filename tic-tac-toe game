#include <iostream>
using namespace std;
void displayBoard(char board[3][3]) {
    cout << "Tic-Tac-Toe\n";
    for (int i = 0; i < 3; i++) {
        cout << "| ";
        for (int j = 0; j < 3; j++) {
            cout << board[i][j] << " | ";
        }
        cout << endl;
    }
}
bool checkWin(char board[3][3], char player) {
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;  
        }
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return true;  
        }
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;  
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;  
    }
    return false;  
}
bool checkDraw(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ')
                return false;  
        }
    }
    return true;  
}

int main() {
    char board[3][3] = { { ' ', ' ', ' ' }, { ' ', ' ', ' ' }, { ' ', ' ', ' ' } };
    char currentPlayer = 'X';
    bool gameover = false;

    while (!gameover) {
        displayBoard(board);
        int row, col;
        cout << "Player " << currentPlayer << ", enter row (1-3) and column (1-3): ";
        cin >> row >> col;

        if (row < 1 || row > 3 || col < 1 || col > 3 || board[row - 1][col - 1] != ' ') {
            cout << "Invalid move. Try again." << endl;
        } else {
            board[row - 1][col - 1] = currentPlayer;

            if (checkWin(board, currentPlayer)) {
                displayBoard(board);
                cout << "Player " << currentPlayer << " wins!" << endl;
                gameover = true;
            } else if (checkDraw(board)) {
                displayBoard(board);
                cout << "It's a draw!" << endl;
                gameover = true;
            } else {
                currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            }
        }
    }

    char playAgain;
    cout << "Play again? (Y/N): ";
    cin >> playAgain;
    if (playAgain == 'Y' || playAgain == 'y') {
        board[0][0] = board[0][1] = board[0][2] = board[1][0] = board[1][1] = board[1][2] = board[2][0] = board[2][1] = board[2][2] = ' ';
        gameover = false;
        currentPlayer = 'X';
    }

    return 0;
}
